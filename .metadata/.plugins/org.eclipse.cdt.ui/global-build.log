10:13:33 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/opencv2/core -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:8:
/usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:10: fatal error: 'opencv2/core/core_c.h' file not found
#include "opencv2/core/core_c.h"
         ^
1 error generated.
make: *** [src/HelloExcutable.o] Error 1
10:14:51 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:44:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:46:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:48:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:50:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:52:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:54:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:56:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:58:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:60:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:62:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:64:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:66:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:68:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:70:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:72:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:281:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:286:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:8:
In file included from /usr/local/Cellar/opencv/2.4.11_1/include/opencv/cv.h:63:
In file included from /usr/local/include/opencv2/core/core_c.h:48:
In file included from /usr/local/include/opencv2/core/types_c.h:101:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:291:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   
Finished building target: HelloWorldFromScratch
 
10:15:13 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
make: Nothing to be done for `all'.
10:15:54 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:59:3: error: unknown type name 'Mat'; did you mean 'cv::Mat'?
  Mat image;
  ^~~
  cv::Mat
/usr/local/include/opencv2/core/mat.hpp:730:18: note: 'cv::Mat' declared here
class CV_EXPORTS Mat
                 ^
../src/HelloExcutable.cpp:60:11: error: use of undeclared identifier 'imread'
  image = imread( argv[1], 1 );
          ^
../src/HelloExcutable.cpp:68:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:71:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:16:55 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:60:11: error: use of undeclared identifier 'imread'
  image = imread( argv[1], 1 );
          ^
../src/HelloExcutable.cpp:68:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:71:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
4 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:17:25 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:60:15: error: no member named 'imread' in namespace 'cv'
  image = cv::imread( argv[1], 1 );
          ~~~~^
../src/HelloExcutable.cpp:68:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:71:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
4 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:18:34 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:60:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:60:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:68:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:71:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:22:50 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:60:11: error: use of undeclared identifier 'cv2'; did you mean 'cv'?
  image = cv2::imread( argv[1], 1 );
          ^~~
          cv
/usr/local/include/opencv2/core/core_c.h:2757:11: note: 'cv' declared here
namespace cv
          ^
../src/HelloExcutable.cpp:60:16: error: no member named 'imread' in namespace 'cv'
  image = cv2::imread( argv[1], 1 );
          ~~~~~^
../src/HelloExcutable.cpp:68:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:71:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:23:47 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:13:17: error: no namespace named 'cv2'; did you mean 'cv'?
using namespace cv2;
                ^~~
                cv
/usr/local/include/opencv2/core/core_c.h:2757:11: note: namespace 'cv' defined here
namespace cv
          ^
../src/HelloExcutable.cpp:61:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:61:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:70:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:72:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
6 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:28:15 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:43:5: error: use of undeclared identifier 'cout'; did you mean 'std::cout'?
                                cout << Pixel[i][j] << endl;
                                ^~~~
                                std::cout
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/iostream:54:33: note: 'std::cout' declared here
extern _LIBCPP_FUNC_VIS ostream cout;
                                ^
../src/HelloExcutable.cpp:43:28: error: use of undeclared identifier 'endl'; did you mean 'std::endl'?
                                cout << Pixel[i][j] << endl;
                                                       ^~~~
                                                       std::endl
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ostream:1032:1: note: 'std::endl' declared here
endl(basic_ostream<_CharT, _Traits>& __os)
^
../src/HelloExcutable.cpp:61:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:61:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:69:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:70:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:72:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
7 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:30:39 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:96:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:96:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:104:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:105:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:107:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:33:55 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:91:
In file included from /usr/local/include/opencv2/core/core.hpp:48:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   
Undefined symbols for architecture x86_64:
  "cv::namedWindow(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::Mat::deallocate()", referenced from:
      cv::Mat::release() in HelloExcutable.o
  "cv::Mat::copySize(cv::Mat const&)", referenced from:
      cv::Mat::operator=(cv::Mat const&) in HelloExcutable.o
  "cv::String::deallocate()", referenced from:
      cv::String::~String() in HelloExcutable.o
  "cv::String::allocate(unsigned long)", referenced from:
      cv::String::String(char const*) in HelloExcutable.o
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::imshow(cv::String const&, cv::_InputArray const&)", referenced from:
      _main in HelloExcutable.o
  "cv::waitKey(int)", referenced from:
      _main in HelloExcutable.o
  "cv::fastFree(void*)", referenced from:
      cv::Mat::~Mat() in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
10:37:46 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   
Undefined symbols for architecture x86_64:
  "cv::namedWindow(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::Mat::deallocate()", referenced from:
      cv::Mat::release() in HelloExcutable.o
  "cv::Mat::copySize(cv::Mat const&)", referenced from:
      cv::Mat::operator=(cv::Mat const&) in HelloExcutable.o
  "cv::String::deallocate()", referenced from:
      cv::String::~String() in HelloExcutable.o
  "cv::String::allocate(unsigned long)", referenced from:
      cv::String::String(char const*) in HelloExcutable.o
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::imshow(cv::String const&, cv::_InputArray const&)", referenced from:
      _main in HelloExcutable.o
  "cv::waitKey(int)", referenced from:
      _main in HelloExcutable.o
  "cv::fastFree(void*)", referenced from:
      cv::Mat::~Mat() in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
10:40:44 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:92:
In file included from /usr/local/include/opencv2/opencv.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   
Undefined symbols for architecture x86_64:
  "cv::namedWindow(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::Mat::deallocate()", referenced from:
      cv::Mat::release() in HelloExcutable.o
  "cv::Mat::copySize(cv::Mat const&)", referenced from:
      cv::Mat::operator=(cv::Mat const&) in HelloExcutable.o
  "cv::String::deallocate()", referenced from:
      cv::String::~String() in HelloExcutable.o
  "cv::String::allocate(unsigned long)", referenced from:
      cv::String::String(char const*) in HelloExcutable.o
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::imshow(cv::String const&, cv::_InputArray const&)", referenced from:
      _main in HelloExcutable.o
  "cv::waitKey(int)", referenced from:
      _main in HelloExcutable.o
  "cv::fastFree(void*)", referenced from:
      cv::Mat::~Mat() in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
10:41:24 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:99:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:99:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:107:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:108:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:110:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:41:36 **** Clean-only build of configuration Debug for project DataStructures ****
make clean 
rm -rf  ./src/LinkedList.o  ./src/LinkedList.d  DataStructures
 
10:41:36 **** Clean-only build of configuration Debug for project HelloWorld ****
make clean 
rm -rf  ./src/HelloWorld.o  ./src/HelloWorld.d  HelloWorld
 
10:41:36 **** Clean-only build of configuration Debug for project HelloWorldFromScratch ****
make clean 
rm -rf  ./src/HelloExcutable.o  ./src/HelloExcutable.d  HelloWorldFromScratch
 
10:41:36 **** Clean-only build of configuration Debug for project MorningTest ****
make clean 
rm -rf  ./src/MorningTest.o  ./src/MorningTest.d  MorningTest
 
10:41:36 **** Clean-only build of configuration Debug for project My2ndNewProject ****
make clean 
rm -rf  ./mysourcefilefolder/mysourcefilewithcppExtension.o  ./mysourcefilefolder/mysourcefilewithcppExtension.d  My2ndNewProject
 
10:41:36 **** Clean-only build of configuration Debug for project PrimitiveDataTypePractice ****
make clean 
rm -rf  ./src/PrimitiveDataTypePractice.o  ./src/PrimitiveDataTypePractice.d  PrimitiveDataTypePractice
 
10:41:36 **** Clean-only build of configuration Debug for project StructurePractice ****
make clean 
rm -rf  ./src/StructurePracitice.o  ./src/StructurePracitice.d  StructurePractice
 
10:41:36 **** Clean-only build of configuration Debug for project TestUsingNameSpaceSTDIssue ****
make clean 
rm -rf  ./src/CPPSourceFile.o  ./src/CPPSourceFile.d  TestUsingNameSpaceSTDIssue
 
10:41:42 **** Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:99:11: error: use of undeclared identifier 'imread'; did you mean 'read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: 'read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:99:11: error: too few arguments to function call, expected 3, have 2; did you mean '::read'?
  image = imread( argv[1], 1 );
          ^~~~~~
          ::read
/usr/local/include/opencv2/core/persistence.hpp:675:17: note: '::read' declared here
CV_EXPORTS void read(const FileNode& node, int& value, int default_value);
                ^
../src/HelloExcutable.cpp:107:3: error: use of undeclared identifier 'namedWindow'; did you mean 'cvNamedWindow'?
  namedWindow( "Display Image", CV_WINDOW_AUTOSIZE );
  ^~~~~~~~~~~
  cvNamedWindow
/usr/local/include/opencv2/highgui/highgui_c.h:127:12: note: 'cvNamedWindow' declared here
CVAPI(int) cvNamedWindow( const char* name, int flags CV_DEFAULT(CV_WINDOW_AUTOSIZE) );
           ^
../src/HelloExcutable.cpp:108:3: error: use of undeclared identifier 'imshow'
  imshow( "Display Image", image );
  ^
../src/HelloExcutable.cpp:110:3: error: use of undeclared identifier 'waitKey'
  waitKey(0);
  ^
5 errors generated.
make: *** [src/HelloExcutable.o] Error 1
10:56:53 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:88:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   
Undefined symbols for architecture x86_64:
  "cv::namedWindow(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::GaussianBlur(cv::_InputArray const&, cv::_OutputArray const&, cv::Size_<int>, double, double, int)", referenced from:
      _main in HelloExcutable.o
  "cv::Mat::deallocate()", referenced from:
      cv::Mat::release() in HelloExcutable.o
  "cv::Mat::copySize(cv::Mat const&)", referenced from:
      cv::Mat::operator=(cv::Mat const&) in HelloExcutable.o
  "cv::String::deallocate()", referenced from:
      cv::String::~String() in HelloExcutable.o
  "cv::String::allocate(unsigned long)", referenced from:
      cv::String::String(char const*) in HelloExcutable.o
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
  "cv::imshow(cv::String const&, cv::_InputArray const&)", referenced from:
      _main in HelloExcutable.o
  "cv::waitKey(int)", referenced from:
      _main in HelloExcutable.o
  "cv::fastFree(void*)", referenced from:
      cv::Mat::~Mat() in HelloExcutable.o
  "cv::Mat::copyTo(cv::_OutputArray const&) const", referenced from:
      cv::Mat::clone() const in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
11:01:02 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_imgproc
ld: library not found for -lopencv_imgproc
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
11:02:45 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_imgproc -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
ld: library not found for -lopencv_imgproc
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
11:03:29 **** Clean-only build of configuration Debug for project DataStructures ****
make clean 
rm -rf  ./src/LinkedList.o  ./src/LinkedList.d  DataStructures
 
11:03:29 **** Clean-only build of configuration Debug for project HelloWorld ****
make clean 
rm -rf  ./src/HelloWorld.o  ./src/HelloWorld.d  HelloWorld
 
11:03:30 **** Clean-only build of configuration Debug for project HelloWorldFromScratch ****
make clean 
rm -rf  ./src/HelloExcutable.o  ./src/HelloExcutable.d  HelloWorldFromScratch
 
11:03:30 **** Clean-only build of configuration Debug for project MorningTest ****
make clean 
rm -rf  ./src/MorningTest.o  ./src/MorningTest.d  MorningTest
 
11:03:30 **** Clean-only build of configuration Debug for project My2ndNewProject ****
make clean 
rm -rf  ./mysourcefilefolder/mysourcefilewithcppExtension.o  ./mysourcefilefolder/mysourcefilewithcppExtension.d  My2ndNewProject
 
11:03:30 **** Clean-only build of configuration Debug for project PrimitiveDataTypePractice ****
make clean 
rm -rf  ./src/PrimitiveDataTypePractice.o  ./src/PrimitiveDataTypePractice.d  PrimitiveDataTypePractice
 
11:03:30 **** Clean-only build of configuration Debug for project StructurePractice ****
make clean 
rm -rf  ./src/StructurePracitice.o  ./src/StructurePracitice.d  StructurePractice
 
11:03:30 **** Clean-only build of configuration Debug for project TestUsingNameSpaceSTDIssue ****
make clean 
rm -rf  ./src/CPPSourceFile.o  ./src/CPPSourceFile.d  TestUsingNameSpaceSTDIssue
 
11:03:33 **** Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/Cellar/opencv/2.4.11_1/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
Finished building: ../src/HelloExcutable.cpp
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
 
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
Building target: HelloWorldFromScratch
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
Invoking: MacOS X C++ Linker
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
ld: library not found for -lopencv_core
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
14:07:45 **** Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:83:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:116:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:62:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:62:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:62:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:66:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:67:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:117:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
14:07:52 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
14:14:40 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:111:16: error: function definition does not declare parameters
        array<int, 3> IntArray {10, 20, 30};
                      ^
../src/HelloWorld.cpp:112:2: error: expected member name or ';' after declaration specifiers
        for(int i; i<IntArray.size(); ++i){
        ^
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:125:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:126:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 2 errors generated.
make: *** [src/HelloWorld.o] Error 1
16:53:34 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
ld: library not found for -lopencv_core
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
16:53:42 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/Cellar/opencv/2.4.11_1/include/opencv -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
ld: library not found for -lopencv_core
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
16:55:28 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/include/opencv -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
../src/HelloExcutable.cpp:89:10: fatal error: 'opencv2/imgproc/imgproc.hpp' file not found
#include "opencv2/imgproc/imgproc.hpp"
         ^
1 error generated.
make: *** [src/HelloExcutable.o] Error 1
16:56:19 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/include/opencv -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:497:5: warning: unused typedef 'CV_StaticAssert_failed_at_497' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 2, "Matx should have at least 2 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:528:1: note: expanded from here
CV_StaticAssert_failed_at_497
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:505:5: warning: unused typedef 'CV_StaticAssert_failed_at_505' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 3, "Matx should have at least 3 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:530:1: note: expanded from here
CV_StaticAssert_failed_at_505
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:513:5: warning: unused typedef 'CV_StaticAssert_failed_at_513' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 4, "Matx should have at least 4 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:532:1: note: expanded from here
CV_StaticAssert_failed_at_513
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:521:5: warning: unused typedef 'CV_StaticAssert_failed_at_521' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 5, "Matx should have at least 5 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:534:1: note: expanded from here
CV_StaticAssert_failed_at_521
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:529:5: warning: unused typedef 'CV_StaticAssert_failed_at_529' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 6, "Matx should have at least 6 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:536:1: note: expanded from here
CV_StaticAssert_failed_at_529
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:538:5: warning: unused typedef 'CV_StaticAssert_failed_at_538' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 7, "Matx should have at least 7 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:538:1: note: expanded from here
CV_StaticAssert_failed_at_538
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:547:5: warning: unused typedef 'CV_StaticAssert_failed_at_547' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 8, "Matx should have at least 8 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:540:1: note: expanded from here
CV_StaticAssert_failed_at_547
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:556:5: warning: unused typedef 'CV_StaticAssert_failed_at_556' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 9, "Matx should have at least 9 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:542:1: note: expanded from here
CV_StaticAssert_failed_at_556
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:566:5: warning: unused typedef 'CV_StaticAssert_failed_at_566' [-Wunused-local-typedef]
    CV_StaticAssert(channels >= 10, "Matx should have at least 10 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:544:1: note: expanded from here
CV_StaticAssert_failed_at_566
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:577:5: warning: unused typedef 'CV_StaticAssert_failed_at_577' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 12, "Matx should have at least 12 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:546:1: note: expanded from here
CV_StaticAssert_failed_at_577
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:586:5: warning: unused typedef 'CV_StaticAssert_failed_at_586' [-Wunused-local-typedef]
    CV_StaticAssert(channels == 16, "Matx should have at least 16 elaments.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:548:1: note: expanded from here
CV_StaticAssert_failed_at_586
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:664:5: warning: unused typedef 'CV_StaticAssert_failed_at_664' [-Wunused-local-typedef]
    CV_StaticAssert(m1*n1 == m*n, "Input and destnarion matrices must have the same number of elements");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:550:1: note: expanded from here
CV_StaticAssert_failed_at_664
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:723:5: warning: unused typedef 'CV_StaticAssert_failed_at_723' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:552:1: note: expanded from here
CV_StaticAssert_failed_at_723
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:731:5: warning: unused typedef 'CV_StaticAssert_failed_at_731' [-Wunused-local-typedef]
    CV_StaticAssert(m == 1 || n == 1, "Single index indexation requires matrix to be a column or a row");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:554:1: note: expanded from here
CV_StaticAssert_failed_at_731
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:57:
/usr/local/include/opencv2/core/matx.hpp:987:5: warning: unused typedef 'CV_StaticAssert_failed_at_987' [-Wunused-local-typedef]
    CV_StaticAssert(cn == 3, "for arbitrary-size vector there is no cross-product defined");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:556:1: note: expanded from here
CV_StaticAssert_failed_at_987
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:303:5: warning: unused typedef 'CV_StaticAssert_failed_at_303' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:245:1: note: expanded from here
CV_StaticAssert_failed_at_303
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:312:5: warning: unused typedef 'CV_StaticAssert_failed_at_312' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:250:1: note: expanded from here
CV_StaticAssert_failed_at_312
^
In file included from ../src/HelloExcutable.cpp:89:
In file included from /usr/local/include/opencv2/imgproc/imgproc.hpp:48:
In file included from /usr/local/include/opencv2/imgproc.hpp:46:
In file included from /usr/local/include/opencv2/core.hpp:3106:
/usr/local/include/opencv2/core/operations.hpp:323:5: warning: unused typedef 'CV_StaticAssert_failed_at_323' [-Wunused-local-typedef]
    CV_StaticAssert( nm == MIN(m, n), "Invalid size of output vector.");
    ^
/usr/local/include/opencv2/core/base.hpp:281:111: note: expanded from macro 'CV_StaticAssert'
       typedef cv::CV_StaticAssert_test< sizeof(cv::CV_StaticAssert_failed< static_cast<bool>(condition) >) > CVAUX_CONCAT(CV_StaticAssert_failed_at_, __LINE__)
                                                                                                              ^
/usr/local/include/opencv2/core/base.hpp:255:28: note: expanded from macro 'CVAUX_CONCAT'
#define CVAUX_CONCAT(a, b) CVAUX_CONCAT_EXP(a,b)
                           ^
/usr/local/include/opencv2/core/base.hpp:254:32: note: expanded from macro 'CVAUX_CONCAT_EXP'
#define CVAUX_CONCAT_EXP(a, b) a##b
                               ^
<scratch space>:255:1: note: expanded from here
CV_StaticAssert_failed_at_323
^
18 warnings generated.
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/lib -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
Undefined symbols for architecture x86_64:
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
17:03:45 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:83:16: error: function definition does not declare parameters
        array<int, 3> IntArray {10, 20, 30};
                      ^
../src/HelloWorld.cpp:114:2: error: expected member name or ';' after declaration specifiers
        for (int i=0; i<IntArray.size(); ++i){
        ^
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:127:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:128:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 2 errors generated.
make: *** [src/HelloWorld.o] Error 1
17:17:06 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:114:2: error: expected member name or ';' after declaration specifiers
        for (int i=0; i<10; ++i){
        ^
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:127:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:128:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:17:48 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:126:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:127:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:17:53 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
17:19:58 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:126:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:127:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:20:01 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
17:23:51 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:126:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:146:23: error: expected ';' at end of declaration
        array<int, 3> MyArray {10, 20, 30};
                             ^
                             ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:127:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:24:56 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:86:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:126:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:146:27: warning: suggest braces around initialization of subobject [-Wmissing-braces]
        array<int, 3> MyArray = {10, 20, 30};
                                 ^~~~~~~~~~
                                 {         }
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:127:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
9 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:25:34 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
17:25:50 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
17:27:08 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:138:27: warning: suggest braces around initialization of subobject [-Wmissing-braces]
        array<int, 3> MyArray = {10, 20, 30};
                                 ^~~~~~~~~~
                                 {         }
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
9 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:28:45 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:138:23: error: expected ';' at end of declaration
        array<int, 3> MyArray {10, 20, 30};
                             ^
                             ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:28:53 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:138:23: error: expected ';' at end of declaration
        array<int, 3> MyArray {10, 20, 30};
                             ^
                             ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:30:54 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:138:28: error: expected ';' at end of declaration
        std::array<int, 3> MyArray{ {10, 20, 30}};
                                  ^
                                  ;
../src/HelloWorld.cpp:139:23: error: expected ';' at end of declaration
        std::array<int, 3> a1{ {1, 2, 3} };
                             ^
                             ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 2 errors generated.
make: *** [src/HelloWorld.o] Error 1
17:32:08 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:138:23: error: expected ';' at end of declaration
        array<int, 3> MyArray{ {10, 20, 30}};
                             ^
                             ;
../src/HelloWorld.cpp:139:18: error: expected ';' at end of declaration
        array<int, 3> a1{ {1, 2, 3} };
                        ^
                        ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 2 errors generated.
make: *** [src/HelloWorld.o] Error 1
17:32:50 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:139:12: error: expected expression
        MyArray = { {10, 20, 30}};
                  ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:34:11 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:139:12: error: expected expression
        MyArray = {10, 20, 30};
                  ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
17:36:51 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:180:9: error: redefinition of 'myarray' with a different type: 'double [10][10]' vs 'array<int, 3>'
        double myarray[10][10];
               ^
../src/HelloWorld.cpp:138:16: note: previous definition is here
        array<int, 3> myarray;
                      ^
../src/HelloWorld.cpp:183:14: error: subscripted value is not an array, pointer, or vector
                        myarray[i][j] = i+j;
                        ~~~~~~~~~~^~
../src/HelloWorld.cpp:193:22: error: subscripted value is not an array, pointer, or vector
                        cout << myarray[i][j] << endl;
                                ~~~~~~~~~~^~
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 3 errors generated.
make: *** [src/HelloWorld.o] Error 1
17:37:07 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:37:39 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
17:37:43 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
17:40:37 **** Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:16:32: error: expected ';' at end of declaration
    std::array<int, 5> i_array1{ {3, 4, 5, 1, 2} };  // double-braces required
                               ^
                               ;
../src/arraytest.cpp:17:36: warning: suggest braces around initialization of subobject [-Wmissing-braces]
    std::array<int, 5> i_array2 = {1, 2, 3, 4, 5};   // except after =
                                   ^~~~~~~~~~~~~
                                   {            }
../src/arraytest.cpp:21:9: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array1)
        ^
../src/arraytest.cpp:21:15: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array1)
              ^
../src/arraytest.cpp:27:9: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array1)
        ^
../src/arraytest.cpp:27:15: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array1)
              ^
../src/arraytest.cpp:31:9: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array2)
        ^
../src/arraytest.cpp:31:15: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]
    for(auto i: i_array2)
              ^
../src/arraytest.cpp:40:9: warning: 'auto' type specifier is a C++11 extension [-Wc++11-extensions]
    for(auto& s: string_array)
        ^
../src/arraytest.cpp:40:16: warning: range-based for loop is a C++11 extension [-Wc++11-extensions]
    for(auto& s: string_array)
               ^
9 warnings and 1 error generated.
make: *** [src/arraytest.o] Error 1
17:49:58 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:18:6: error: use of undeclared identifier 'cout'; did you mean 'std::cout'?
        cout << MyArray[i] << endl;
        ^~~~
        std::cout
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/iostream:54:33: note: 'std::cout' declared here
extern _LIBCPP_FUNC_VIS ostream cout;
                                ^
../src/arraytest.cpp:18:28: error: use of undeclared identifier 'endl'; did you mean 'std::endl'?
        cout << MyArray[i] << endl;
                              ^~~~
                              std::endl
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ostream:1032:1: note: 'std::endl' declared here
endl(basic_ostream<_CharT, _Traits>& __os)
^
2 errors generated.
make: *** [src/arraytest.o] Error 1
17:50:33 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:18:6: error: use of undeclared identifier 'cout'; did you mean 'std::cout'?
        cout << MyArray[i] << endl
        ^~~~
        std::cout
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/iostream:54:33: note: 'std::cout' declared here
extern _LIBCPP_FUNC_VIS ostream cout;
                                ^
../src/arraytest.cpp:18:32: error: expected ';' after expression
        cout << MyArray[i] << endl
                                  ^
                                  ;
../src/arraytest.cpp:18:28: error: use of undeclared identifier 'endl'; did you mean 'std::endl'?
        cout << MyArray[i] << endl
                              ^~~~
                              std::endl
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ostream:1032:1: note: 'std::endl' declared here
endl(basic_ostream<_CharT, _Traits>& __os)
^
3 errors generated.
make: *** [src/arraytest.o] Error 1
17:51:18 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:16:9: warning: unused variable 'MyArray' [-Wunused-variable]
    int MyArray[10] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        ^
1 warning generated.
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:52:14 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:52:40 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:52:49 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:54:05 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:17:30: error: expected ';' at end of declaration
    array<int, 3> LittleArray {1, 2, 3};
                             ^
                             ;
1 error generated.
make: *** [src/arraytest.o] Error 1
17:54:27 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:17:19: warning: unused variable 'LittleArray' [-Wunused-variable]
    array<int, 3> LittleArray;
                  ^
1 warning generated.
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:54:34 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:55:21 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:55:31 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:56:12 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:56:19 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:57:03 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
17:57:07 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
17:58:03 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:20:19: error: expected expression
    LittleArray = {4, 5, 6};
                  ^
1 error generated.
make: *** [src/arraytest.o] Error 1
17:58:20 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:20:16: error: expected ';' after expression
    LittleArray {4, 5, 6};
               ^
               ;
../src/arraytest.cpp:20:18: warning: expression result unused [-Wunused-value]
    LittleArray {4, 5, 6};
                 ^
../src/arraytest.cpp:20:21: warning: expression result unused [-Wunused-value]
    LittleArray {4, 5, 6};
                    ^
../src/arraytest.cpp:20:25: error: expected ';' after expression
    LittleArray {4, 5, 6};
                        ^
                        ;
../src/arraytest.cpp:20:24: warning: expression result unused [-Wunused-value]
    LittleArray {4, 5, 6};
                       ^
../src/arraytest.cpp:20:5: warning: expression result unused [-Wunused-value]
    LittleArray {4, 5, 6};
    ^~~~~~~~~~~
4 warnings and 2 errors generated.
make: *** [src/arraytest.o] Error 1
17:59:08 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
../src/arraytest.cpp:20:16: error: expected ';' after expression
    LittleArray{ {4, 5, 6} };
               ^
               ;
../src/arraytest.cpp:20:19: warning: expression result unused [-Wunused-value]
    LittleArray{ {4, 5, 6} };
                  ^
../src/arraytest.cpp:20:22: warning: expression result unused [-Wunused-value]
    LittleArray{ {4, 5, 6} };
                     ^
../src/arraytest.cpp:20:26: error: expected ';' after expression
    LittleArray{ {4, 5, 6} };
                         ^
                         ;
../src/arraytest.cpp:20:25: warning: expression result unused [-Wunused-value]
    LittleArray{ {4, 5, 6} };
                        ^
../src/arraytest.cpp:20:5: warning: expression result unused [-Wunused-value]
    LittleArray{ {4, 5, 6} };
    ^~~~~~~~~~~
4 warnings and 2 errors generated.
make: *** [src/arraytest.o] Error 1
18:16:25 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
Building file: ../src/arraytest.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/arraytest.d" -MT"src/arraytest.o" -o "src/arraytest.o" "../src/arraytest.cpp"
Finished building: ../src/arraytest.cpp
 
Building target: ArrayTest
Invoking: MacOS X C++ Linker
g++  -o "ArrayTest"  ./src/arraytest.o   
Finished building target: ArrayTest
 
18:16:32 **** Incremental Build of configuration Debug for project ArrayTest ****
make all 
make: Nothing to be done for `all'.
18:20:00 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
18:20:08 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
18:21:57 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
18:22:01 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
18:23:30 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:197:27: error: expected ';' after expression
                cout << "VecArray.x is "
                                        ^
                                        ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
18:23:36 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:197:27: error: expected ';' after expression
                cout << "VecArray.x is "
                                        ^
                                        ;
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 1 error generated.
make: *** [src/HelloWorld.o] Error 1
18:23:49 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
18:23:57 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
18:25:00 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
18:25:04 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
13:14:40 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/lib -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
Undefined symbols for architecture x86_64:
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
13:15:49 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building file: ../src/HelloExcutable.cpp
Invoking: GCC C++ Compiler
g++ -I/usr/local/include/ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloExcutable.d" -MT"src/HelloExcutable.o" -o "src/HelloExcutable.o" "../src/HelloExcutable.cpp"
Finished building: ../src/HelloExcutable.cpp
 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/lib -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
Undefined symbols for architecture x86_64:
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
13:16:57 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/lib -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
Undefined symbols for architecture x86_64:
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
21:41:24 **** Incremental Build of configuration Debug for project HelloWorldFromScratch ****
make all 
Building target: HelloWorldFromScratch
Invoking: MacOS X C++ Linker
g++ -L/usr/local/lib -o "HelloWorldFromScratch"  ./src/HelloExcutable.o   -lopencv_core -lopencv_highgui -lopencv_imgproc -lopencv_ml -lopencv_video -lopencv_features2d -lopencv_calib3d -lopencv_objdetect -lopencv_contrib -lopencv_legacy -lopencv_flann
Undefined symbols for architecture x86_64:
  "cv::imread(cv::String const&, int)", referenced from:
      _main in HelloExcutable.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
make: *** [HelloWorldFromScratch] Error 1
21:42:05 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
make: Nothing to be done for `all'.
22:46:18 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
22:54:39 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:11:10: fatal error: 'vector.h' file not found
#include "vector.h"
         ^
1 error generated.
make: *** [src/HelloWorld.o] Error 1
22:55:55 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:11:10: fatal error: 'vector.h' file not found
#include "vector.h"
         ^
1 error generated.
make: *** [src/HelloWorld.o] Error 1
23:00:10 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:40:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:74:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:101:2: error: unknown type name 'Vector'; did you mean 'hecto'?
        Vector Vec1(1.0, 2.0, 3.0);
        ^~~~~~
        hecto
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:268:43: note: 'hecto' declared here
typedef ratio<                100LL, 1LL> hecto;
                                          ^
../src/HelloWorld.cpp:101:9: error: no matching constructor for initialization of 'hecto' (aka 'ratio<100LL, 1LL>')
        Vector Vec1(1.0, 2.0, 3.0);
               ^    ~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
class _LIBCPP_TYPE_VIS_ONLY ratio
                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit default constructor) not viable: requires 0 arguments, but 3 were provided
../src/HelloWorld.cpp:102:2: error: unknown type name 'Vector'; did you mean 'hecto'?
        Vector Vec2(2.0, 2.5, 3.5);
        ^~~~~~
        hecto
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:268:43: note: 'hecto' declared here
typedef ratio<                100LL, 1LL> hecto;
                                          ^
../src/HelloWorld.cpp:102:9: error: no matching constructor for initialization of 'hecto' (aka 'ratio<100LL, 1LL>')
        Vector Vec2(2.0, 2.5, 3.5);
               ^    ~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
class _LIBCPP_TYPE_VIS_ONLY ratio
                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit default constructor) not viable: requires 0 arguments, but 3 were provided
../src/HelloWorld.cpp:103:2: error: unknown type name 'Vector'; did you mean 'hecto'?
        Vector Vec3(3.0, 2.5, 1.5);
        ^~~~~~
        hecto
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:268:43: note: 'hecto' declared here
typedef ratio<                100LL, 1LL> hecto;
                                          ^
../src/HelloWorld.cpp:103:9: error: no matching constructor for initialization of 'hecto' (aka 'ratio<100LL, 1LL>')
        Vector Vec3(3.0, 2.5, 1.5);
               ^    ~~~~~~~~~~~~~
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided
class _LIBCPP_TYPE_VIS_ONLY ratio
                            ^
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:234:29: note: candidate constructor (the implicit default constructor) not viable: requires 0 arguments, but 3 were provided
../src/HelloWorld.cpp:106:8: error: use of undeclared identifier 'Vector'
        array<Vector, 3> VecArray;
              ^
../src/HelloWorld.cpp:107:2: error: use of undeclared identifier 'VecArray'
        VecArray[0] = Vec1;
        ^
../src/HelloWorld.cpp:108:2: error: use of undeclared identifier 'VecArray'
        VecArray[2] = Vec3;
        ^
../src/HelloWorld.cpp:110:2: error: unknown type name 'Vector'; did you mean 'hecto'?
        Vector Vec4, Vec5;
        ^~~~~~
        hecto
/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/ratio:268:43: note: 'hecto' declared here
typedef ratio<                100LL, 1LL> hecto;
                                          ^
../src/HelloWorld.cpp:114:7: error: no member named 'x' in 'std::__1::ratio<100, 1>'
        Vec5.x = 50;
        ~~~~ ^
../src/HelloWorld.cpp:116:15: error: no member named 'y' in 'std::__1::ratio<100, 1>'
        cout << Vec4.y << endl;
                ~~~~ ^
../src/HelloWorld.cpp:117:15: error: no member named 'x' in 'std::__1::ratio<100, 1>'
        cout << Vec5.x << endl;
                ~~~~ ^
../src/HelloWorld.cpp:19:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:19:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:19:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:23:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:24:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:75:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings and 13 errors generated.
make: *** [src/HelloWorld.o] Error 1
23:00:51 **** Incremental Build of configuration Debug for project HelloWorld ****
make all 
Building file: ../src/HelloWorld.cpp
Invoking: GCC C++ Compiler
g++ -O0 -g3 -Wall -c -fmessage-length=0 -MMD -MP -MF"src/HelloWorld.d" -MT"src/HelloWorld.o" -o "src/HelloWorld.o" "../src/HelloWorld.cpp"
../src/HelloWorld.cpp:84:12: warning: implicit conversion of NULL constant to 'double' [-Wnull-conversion]
                _value = NULL;
                       ~ ^~~~
                         0.0
../src/HelloWorld.cpp:118:14: warning: in-class initialization of non-static data member is a C++11 extension [-Wc++11-extensions]
        int _Length = 0;
                    ^
../src/HelloWorld.cpp:63:9: warning: private field 'x' is not used [-Wunused-private-field]
        double x, y, z;
               ^
../src/HelloWorld.cpp:63:12: warning: private field 'y' is not used [-Wunused-private-field]
        double x, y, z;
                  ^
../src/HelloWorld.cpp:63:15: warning: private field 'z' is not used [-Wunused-private-field]
        double x, y, z;
                     ^
../src/HelloWorld.cpp:67:9: warning: private field 'atomMass' is not used [-Wunused-private-field]
        double atomMass;
               ^
../src/HelloWorld.cpp:68:6: warning: private field 'atomicNumber' is not used [-Wunused-private-field]
        int atomicNumber;
            ^
../src/HelloWorld.cpp:119:8: warning: private field 'Node0' is not used [-Wunused-private-field]
        Node *Node0;
              ^
8 warnings generated.
Finished building: ../src/HelloWorld.cpp
 
Building target: HelloWorld
Invoking: MacOS X C++ Linker
g++  -o "HelloWorld"  ./src/HelloWorld.o   
Finished building target: HelloWorld
 
